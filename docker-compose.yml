version: '3.8'
services:
  database:
    image: postgres
    ports:
      - "5432:5432"
    volumes: 
      - "./pgdata:/var/lib/postgresql/data"
    environment:
      POSTGRES_USER: mlflow_user
      POSTGRES_PASSWORD: mlflow_password
      POSTGRES_DB: db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal
  mlflow:
    image: humamf/py-mlflow
    ports:
      - "5000:5000"
    command:
      - mlflow
      - server
      - --host
      - 0.0.0.0
      - --port
      - '5000'
      - --backend-store-uri
      - 'postgresql://mlflow_user:mlflow_password@database:5432/db'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      retries: 3
    depends_on:
      database:
        condition: service_healthy
    networks:
      - internal
  datascience:
    image: humamf/dsmlflow
    volumes:
      - ${HOST_VOLUME_PATH}:/home/jovyan/work
    depends_on:
      database:
        condition: service_healthy
    networks:
      - internal
  server:
    # require MLFlow because it need to load the artifacts and models
    # this is just need the client side not the server side
    image: humamf/dsmlflow 
    ports:
      - "5050:5050"
    # command: for debugging 
    command:
      - "tail"
      - "-f"
      - "/dev/null"
      # command:
      # - python
      # - server/server.py
    networks:
      - internal
    volumes:
      - ${HOST_VOLUME_PATH}:/home/jovyan/work

volumes:
  train:

networks:
  internal:
    driver: bridge
